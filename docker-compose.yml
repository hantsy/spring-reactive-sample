version: '3.3' # specify docker-compose version

# Define the services/containers to be run
services:
  cassandra:
    image: cassandra
    ports:
    # 7000: intra-node communication
    # 7001: TLS intra-node communication
    # 7199: JMX
    # 9042: CQL
    # 9160: thrift service
    - "9042:9042"
    volumes:
    - cassandradata:/var/lib/cassandra
    
  redis:
    image: redis
    ports:
      - "6379:6379"
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test
      POSTGRES_USER: user
    volumes:
      - ./data/postgresql:/var/lib/postgresql
      - ./pg-initdb.d:/docker-entrypoint-initdb.d
      
  mongodb: 
    image: mongo 
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
#    command: --smallfiles 
#   command: --smallfiles --rest --auth  // if there is a password set in mongo.

  couchbase:
    image: couchbase
    ports:
      - "8091:8091"
      - "8092:8092"
      - "8093:8093"
      - "8094:8094"
      - "11210:11210"
    volumes:
      - couchbasedata:/opt/couchbase/var
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      
  neo4j:
    image: neo4j # use the latest version of neo4j
    environment:
      - "NEO4J_AUTH=neo4j/test" # disable authentication by passing --env=NEO4J_AUTH=none
      - "SECURE_FILE_PERMISSIONS=yes" # To enforce stricter file permissions checking 
    #  - "NEO4J_ACCEPT_LICENSE_AGREEMENT=yes" # required for enterprise editon: neo4j:4.0.0-enterprise
    ports:
      - "7687:7687" 
      - "7474:7474" 

  rabbitmq:
    image: rabbitmq:3.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1    
volumes:
  mongodata:  
#    driver: local-persist
#    driver_opts:
#      mountpoint: ./data  
  cassandradata: 
  couchbasedata: 
  esdata1:
    driver: local
       